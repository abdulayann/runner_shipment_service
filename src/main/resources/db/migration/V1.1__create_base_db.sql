-- logging
CREATE TABLE IF NOT EXISTS logging(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  meta_data  jsonb,
  created_at TIMESTAMP,
  updated_at TIMESTAMP,
  created_by INT,
  updated_by INT,
  is_deleted BOOLEAN,
  deleted_by INT,
  deleted_at TIMESTAMP,
  UNIQUE(guid)
);

CREATE TABLE IF NOT EXISTS consolidation_details(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  consolidation_number VARCHAR,
  consolidation_type varchar,
  transport_mode varchar,
  container_category varchar,
  is_domestic INT,
  mawb VARCHAR,
  service_level VARCHAR,
  payment VARCHAR,
  first_load varchar,
  last_discharge varchar,
  booking_type varchar,
  declaration_type varchar,
  delivery_mode varchar,
  is_linked smallint,
  is_charter smallint,
  reference_no varchar,
  package_type varchar,
  agent_reference varchar,
  coload_mbl varchar,
  coload_booking_ref varchar,
  shipment_type varchar,
  mbl varchar,
  is_cargo_only smallint,
  special_instructions varchar,
  description varchar,
  marksn_nums varchar,
  additional_terms varchar,
  bonded_warehouse_id bigint,
  UNIQUE(guid),
shipment_ids varchar,
logging_id BIGINT unique,
CONSTRAINT FK_logging_console FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- Shipment details
CREATE TABLE IF NOT EXISTS shipment_details(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  direction VARCHAR,
  status INT,
  source  VARCHAR,
  transport_mode VARCHAR,
  shipment_type VARCHAR,
  job_type VARCHAR,
  service_type VARCHAR,
  house_bill VARCHAR,
  master_bill VARCHAR,
  booking_Reference VARCHAR,
  console_ref VARCHAR,
  sales_agent BIGINT,
  payment_terms VARCHAR,
  goods_description VARCHAR,
  marks_num VARCHAR,
  additional_terms VARCHAR,
  incoterms VARCHAR,
  quote_type VARCHAR,
  UNIQUE(guid),
consolidation_ids VARCHAR,
logging_id BIGINT unique,
CONSTRAINT FK_logging_shipment FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- Parties
CREATE TABLE IF NOT EXISTS parties(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  party_type VARCHAR,
  org_id INT,
  address_id INT,
  org_data  jsonb,
  address_data jsonb,
  entity_id bigInt,
  entity_type varchar,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_parties FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- Carrier details
CREATE TABLE IF NOT EXISTS carrier_details(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  shipping_line VARCHAR,
  vessel VARCHAR,
  voyage VARCHAR,
  flight_number VARCHAR,
  aircraft_type VARCHAR,
  aircraft_registration VARCHAR,
  truck_ref_number VARCHAR,
  journey_number VARCHAR,
  journey_ref_number VARCHAR,
  origin  varchar,
  destination varchar,
  origin_port  varchar,
  destination_port varchar,
  eta TIMESTAMP,
  etd TIMESTAMP,
  ata TIMESTAMP,
  atd TIMESTAMP,
  UNIQUE(guid),
contact_person_name VARCHAR,
contact_person_number VARCHAR,
contact_person_email VARCHAR,
contact_person_website VARCHAR,
logging_id BIGINT unique,
CONSTRAINT FK_logging_carrier FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- BL details
CREATE TABLE IF NOT EXISTS bl_details(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  release_type VARCHAR,
  house_bill_type VARCHAR,
  on_board VARCHAR,
  on_board_date  TIMESTAMP,
  delivery_mode VARCHAR,
  original smallint,
  copy smallint,
  bl_charges_display VARCHAR,
  bl_exporter_shipment VARCHAR,
  screening_status VARCHAR,
  paid_place BIGINT,
  place_of_issue BIGINT,
  place_of_supply BIGINT,
  date_of_issue TIMESTAMP,
  date_of_receipt TIMESTAMP,
  goods_co VARCHAR,
  boe_number VARCHAR,
  boe_date TIMESTAMP,
  shipment_id bigInt,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_hbl FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- Measurement details
CREATE TABLE IF NOT EXISTS measurment_details(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  weight decimal,
  weight_unit VARCHAR,
  volume decimal,
  volume_unit VARCHAR,
  volumetric_weight decimal,
  volumetric_weight_unit VARCHAR,
  chargable decimal,
  chargeable_unit VARCHAR,
  net_weight decimal,
  net_weight_unit VARCHAR,
  no_of_packs INT,
  packs_unit VARCHAR,
  inner_packs INT,
  inner_pack_unit VARCHAR,
  shipment_id bigInt,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_measurement FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- pickup
CREATE TABLE IF NOT EXISTS pickup(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  estimated_pickup TIMESTAMP,
  required_by TIMESTAMP,
  port_transport_advised TIMESTAMP,
  actual_pickup TIMESTAMP,
  shipment_id bigInt,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_pickup FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- delivery
CREATE TABLE IF NOT EXISTS delivery(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  estimated_delivery TIMESTAMP,
  actual_delivery TIMESTAMP,
  required_by TIMESTAMP,
  port_transport_advised TIMESTAMP,
  shipment_id bigInt,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_delivery FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- Jobs
CREATE TABLE IF NOT EXISTS orders(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  order_number VARCHAR,
  order_date TIMESTAMP,
  confirm_number VARCHAR,
  confirm_date TIMESTAMP,
  invoice_number VARCHAR,
  invoice_date TIMESTAMP,
  order_status VARCHAR,
  followup_date TIMESTAMP,
  currency VARCHAR,
  service_mode VARCHAR,
  incoterm VARCHAR,
  additional_terms VARCHAR,
  transport_mode VARCHAR,
  country_of_origin VARCHAR,
  shipment_id bigInt,
  consolidation_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_orders FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- Services
CREATE TABLE IF NOT EXISTS shipment_services(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  service_type VARCHAR,
  srv_location INT,
  booking_date TIMESTAMP,
  service_count VARCHAR,
  service_duration TIMESTAMP,
  completion_date TIMESTAMP,
  ref_number VARCHAR,
  service_notes VARCHAR,
  shipment_id bigInt,
  consolidation_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_service FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- achieved quantities
CREATE TABLE IF NOT EXISTS achieved_quantities(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  weight_volume decimal,
  weight_volume_unit VARCHAR,
  consolidated_weight decimal,
  consolidated_weight_unit VARCHAR,
  consolidatied_volume decimal,
  consolidatied_volume_unit VARCHAR,
  consolidation_charge_quantity decimal,
  consolidation_charge_quantity_unit VARCHAR,
  volume_utilization  VARCHAR,
  weight_utilization  VARCHAR,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_quantities FOREIGN KEY(logging_id) REFERENCES logging(id)
);


-- containers
CREATE TABLE IF NOT EXISTS containers(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  container_type VARCHAR,
  container_number VARCHAR,
  seal_number VARCHAR,
  description_of_goods VARCHAR,
  no_of_packages INT,
  net_weight decimal,
  net_weight_unit VARCHAR,
  gross_weight decimal,
  gross_weight_unit VARCHAR,
  measurement decimal,
  measurement_unit VARCHAR,
  commodity_id BIGINT,
  hs_code VARCHAR,
  is_shipper_owned BOOLEAN,
  is_empty BOOLEAN,
  container_count INT,
  carrier_seal_number VARCHAR,
  shipper_seal_number VARCHAR,
  terminal_operator_seal_number VARCHAR,
  veterinary_seal_number VARCHAR,
  customs_seal_number VARCHAR,
  customs_release_code VARCHAR,
  container_stuffing_location BIGINT,
  container_comments VARCHAR,
  gross_volume decimal,
  gross_volume_unit VARCHAR,
  is_reefer BOOLEAN,
  min_temp decimal,
  min_temp_unit VARCHAR,
  max_temp decimal,
  max_temp_unit VARCHAR,
  hbl_delivery_mode VARCHAR,
  per_container_cost_rate VARCHAR,
  per_container_sell_rate VARCHAR,
  current_cost_rate decimal,
  minimum_cost decimal,
  total_cost_value decimal,
  current_sell_rate decimal,
  minimum_sell decimal,
  total_sell_value decimal,
  allocation_date TIMESTAMP,
  dg_class BIGINT,
  hazardous INT,
  hazardous_un VARCHAR,
  tare_weight decimal,
  tare_weight_unit VARCHAR,
  serial_number VARCHAR,
  inner_package_number VARCHAR,
  inner_package_type VARCHAR,
  package_length decimal,
  package_breadth decimal,
  package_height decimal,
  is_temperature_maintained BOOLEAN,
  packs VARCHAR,
  packs_type VARCHAR,
  marks_n_nums VARCHAR,
  inner_package_measurement_unit VARCHAR,
  pacr_number VARCHAR,
  chargeable decimal,
  chargeable_unit VARCHAR,
  is_own_container BOOLEAN,
  pack_id BIGINT,
  transport_mode VARCHAR,
  status INT,
  extra_params VARCHAR,
  remarks VARCHAR,
  allocated_weight decimal,
  allocated_weight_unit VARCHAR,
  allocated_volume decimal,
  allocated_volume_unit VARCHAR,
  achieved_weight decimal,
  achieved_weight_unit VARCHAR,
  achieved_volume decimal,
  achieved_volume_unit VARCHAR,
  weight_utilization VARCHAR,
  volume_utilization VARCHAR,
  shipment_id bigInt,
  consolidation_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_container FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- packing
CREATE TABLE IF NOT EXISTS packing(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  dg_goods_id BIGINT,
  dg_substance_id BIGINT,
  packs VARCHAR,
  packs_type VARCHAR,
  container_number VARCHAR,
  weight decimal,
  weight_unit VARCHAR,
  volume decimal,
  volume_unit VARCHAR,
  inspections VARCHAR,
  origin BIGINT,
  packing_order VARCHAR,
  length decimal,
  length_unit VARCHAR,
  width decimal,
  width_unit VARCHAR,
  height decimal,
  heigth_unit VARCHAR,
  marks_n_nums VARCHAR,
  flash_point VARCHAR,
  undg_contact VARCHAR,
  is_temperature_controlled BOOLEAN,
  min_temp decimal,
  min_temp_unit VARCHAR,
  max_temp decimal,
  max_temp_unit VARCHAR,
  hs_code VARCHAR,
  country_code VARCHAR,
  goods_description VARCHAR,
  reference_number VARCHAR,
  dg_class VARCHAR,
  hazardous BOOLEAN,
  commodity_id BIGINT,
  net_weight decimal,
  net_weight_unit VARCHAR,
  volume_weight decimal,
  volume_weight_unit VARCHAR,
  vin_number VARCHAR,
  container_id BIGINT,
  transport_mode VARCHAR,
  inner_package_number VARCHAR,
  inner_package_type VARCHAR,
  chargeable decimal,
  chargeable_unit VARCHAR,
  customs_release_code VARCHAR,
  shipment_number VARCHAR,
  inner_packs_id BIGINT,
  inner_packs_count BIGINT,
  shipment_id bigInt,
  consolidation_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
CONSTRAINT FK_container FOREIGN KEY(container_id) REFERENCES containers(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_packing FOREIGN KEY(logging_id) REFERENCES logging(id)
);


-- routing
CREATE TABLE IF NOT EXISTS routings(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  leg INT,
  mode VARCHAR,
  status VARCHAR,
  vessel_name VARCHAR,
  route_description VARCHAR,
  pol_id BIGINT,
  pod_id BIGINT,
  is_domestic BOOLEAN,
  eta TIMESTAMP,
  etd TIMESTAMP,
  ata TIMESTAMP,
  atd TIMESTAMP,
  consolidation_id BIGINT,
  is_linked BOOLEAN,
  voyage VARCHAR,
  aircraft_registration VARCHAR,
  flight_number VARCHAR,
  aircraft_type VARCHAR,
  route_leg_id INT,
  vessel_id INT,
  transit_days INT,
  shipment_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_routing FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- dangerous_class
CREATE TABLE IF NOT EXISTS dangerous_class(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  class_name VARCHAR,
  dg_class VARCHAR,
  dg_substance_id INT,
  consolidation_id bigInt,
  shipment_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_dg_class FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- -- consol_ship_link
-- CREATE TABLE IF NOT EXISTS consol_ship_link(
-- id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
-- guid uuid NOT NULL,
-- tenant_id INT NOT NULL,
-- shipment_id bigInt,
-- consolidation_id bigInt,
-- CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
-- CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
-- UNIQUE(guid),
-- logging_id BIGINT unique,
-- CONSTRAINT FK_logging_consol_ship_link FOREIGN KEY(logging_id) REFERENCES logging(id)
-- );

-- reference_number
CREATE TABLE IF NOT EXISTS reference_numbers(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  consolidation_id bigInt,
  shipment_id bigInt,
  country_of_issue varchar,
  type varchar,
  reference_number varchar,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_reference_numbers FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- events
CREATE TABLE IF NOT EXISTS events(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  consolidation_id bigInt,
  shipment_id bigInt,
  event_code varchar,
  name varchar,
  type varchar,
  estimated TIMESTAMP,
  actual TIMESTAMP,
  public_tracking_event BOOLEAN,
  location varchar,
  place_description varchar,
  latitude varchar,
  longitude varchar,
  source varchar,
  event_estimate_update_reasons varchar,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_events FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- truck_driver_detail
CREATE TABLE IF NOT EXISTS truck_driver_detail(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  transporter_type INT,
  driver_name VARCHAR,
  driver_mobile_number VARCHAR,
  truck_number_plate VARCHAR,
  trailer_number_plate VARCHAR,
  truck_or_trailertype VARCHAR,
  container_type_code VARCHAR,
  container_id BIGINT,
  shipment_id BIGINT,
  consolidation_id BIGINT,
  seld_transporter_name VARCHAR,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
CONSTRAINT FK_container FOREIGN KEY(container_id) REFERENCES containers(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_trucking_details FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- file_repo
CREATE TABLE IF NOT EXISTS file_repo(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  file_name VARCHAR,
  path VARCHAR,
  doc_type VARCHAR,
  client_enabled INT,
  is_posted INT,
  event_code VARCHAR,
  shipment_id bigInt,
  consolidation_id bigInt,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_file_repo FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- departure
CREATE TABLE IF NOT EXISTS departure(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  first_foreign_port_arrival_date TIMESTAMP,
  last_foreign_port_departure_date TIMESTAMP,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_departure FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- arrival
CREATE TABLE IF NOT EXISTS arrival(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  first_arrival_port_arrival_date TIMESTAMP,
  last_foreign_port_departure_date TIMESTAMP,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_arival FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- mbl_details
CREATE TABLE IF NOT EXISTS mbl_details(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  manifest_print varchar,
  print_other_docs varchar,
  awb_dimensions varchar,
  release_type varchar,
  no_of_originals int,
  no_of_copies int,
  place_of_issue bigInt NULL,
  mbl_issue_date TIMESTAMP,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_mbl FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- allocations
CREATE TABLE IF NOT EXISTS allocations(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  shipment_count INT NULL,
  cutoff_date TIMESTAMP,
  is_hazardous BOOLEAN,
  is_temparature_controlled BOOLEAN,
  weight decimal,
  weight_unit varchar,
  volumne decimal,
  volume_unit varchar,
  chargable decimal,
  chargeable_unit varchar,
  min_temp decimal,
  min_temp_unit varchar,
  max_temp decimal,
  max_temp_unit varchar,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_allocations FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- cutoffs
CREATE TABLE IF NOT EXISTS cutoffs(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  estimated_terminal_cutoff TIMESTAMP,
  actual_terminal_cutoff TIMESTAMP,
  verified_gross_mass_cutoff TIMESTAMP,
  reefer_cutoff TIMESTAMP,
  booking_cutoff TIMESTAMP,
  si_cutoff_cutoff TIMESTAMP,
  hazardous_booking_cutoff TIMESTAMP,
  UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_cutoffs FOREIGN KEY(logging_id) REFERENCES logging(id)
);

-- shipment container mapping
CREATE TABLE IF NOT EXISTS shipments_common_containers_mapping(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guid uuid NOT NULL,
  tenant_id INT NOT NULL,
  shipment_id bigInt,
  containers_id bigInt,
  created_at TIMESTAMP,
  updated_at TIMESTAMP,
  created_by INT,
  updated_by INT,
  is_deleted BOOLEAN,
  deleted_by INT,
  deleted_at TIMESTAMP,
CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
CONSTRAINT FK_container FOREIGN KEY(containers_id) REFERENCES containers(id),
UNIQUE(guid),
logging_id BIGINT unique,
CONSTRAINT FK_logging_ship_container_mapping FOREIGN KEY(logging_id) REFERENCES logging(id)
);


alter table shipment_details add column bl_detail_id bigint unique;
ALTER TABLE shipment_details ADD CONSTRAINT FK_bl_shipment FOREIGN KEY (bl_detail_id) REFERENCES bl_details (id);
alter table shipment_details add column carrier_detail_id bigint unique;
ALTER TABLE shipment_details ADD CONSTRAINT FK_carrier_shipment FOREIGN KEY (carrier_detail_id) REFERENCES carrier_details (id);
alter table shipment_details add column measurement_detail_id bigint unique;
ALTER TABLE shipment_details ADD CONSTRAINT FK_meaurment_shipment FOREIGN KEY (measurement_detail_id) REFERENCES measurment_details (id);
alter table shipment_details add column pickup_detail_id bigint unique;
ALTER TABLE shipment_details ADD CONSTRAINT FK_pickup_shipment FOREIGN KEY (pickup_detail_id) REFERENCES pickup (id);
alter table shipment_details add column delivery_detail_id bigint unique;
ALTER TABLE shipment_details ADD CONSTRAINT FK_delivery_shipment FOREIGN KEY (delivery_detail_id) REFERENCES delivery (id);
alter table shipment_details add column assigned_to int;
alter table shipment_details add column is_domestic boolean default false;
alter table shipment_details add column shipment_id varchar;

alter table consolidation_details add column carrier_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_carrier_console FOREIGN KEY (carrier_id) REFERENCES carrier_details (id);
alter table consolidation_details add column achieved_quantity_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_archieved_quantity_console FOREIGN KEY (achieved_quantity_id) REFERENCES achieved_quantities (id);
alter table consolidation_details add column departure_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_departure_console FOREIGN KEY (departure_id) REFERENCES departure (id);
alter table consolidation_details add column arrival_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_arrival_console FOREIGN KEY (arrival_id) REFERENCES arrival (id);
alter table consolidation_details add column mbl_detail_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_mbl_details_console FOREIGN KEY (mbl_detail_id) REFERENCES mbl_details (id);
alter table consolidation_details add column allocation_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_allocations_console FOREIGN KEY (allocation_id) REFERENCES allocations (id);
alter table consolidation_details add column cutoff_id bigint unique;
ALTER TABLE consolidation_details ADD CONSTRAINT FK_cutoffs_console FOREIGN KEY (cutoff_id) REFERENCES cutoffs (id);


