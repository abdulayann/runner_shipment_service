CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE public.bl_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    boe_date timestamp without time zone,
    boe_number character varying(255),
    date_of_issue timestamp without time zone,
    date_of_receipt timestamp without time zone,
    delivery_mode character varying(255),
    goods_co character varying(255),
    house_bill_type character varying(255),
    paid_place bigint,
    place_of_issue bigint,
    release_type character varying(255),
    screening_status character varying(255),
    shipment_id bigint
);

CREATE TABLE public.booking_carriage (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    booking_id bigint,
    carriage_mode character varying(255),
    carriage_type character varying(255),
    eta timestamp without time zone,
    etd timestamp without time zone,
    pod_id bigint,
    pol_id bigint,
    shipment_id bigint,
    vessel character varying(255),
    vessel_id bigint,
    voyage character varying(255)
);

CREATE TABLE public.carrier_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    ata timestamp without time zone,
    atd timestamp without time zone,
    destination character varying(255),
    eta timestamp without time zone,
    etd timestamp without time zone,
    origin character varying(255),
    shipping_line character varying(255),
    vessel character varying(255),
    voyage character varying(255)
);

CREATE TABLE public.containers (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    achieved_volume numeric(19,2),
    achieved_volume_unit character varying(255),
    achieved_weight numeric(19,2),
    achieved_weight_unit character varying(255),
    allocated_volume numeric(19,2),
    allocated_volume_unit_id character varying(255),
    allocated_weight numeric(19,2),
    allocated_weight_unit character varying(255),
    allocation_date timestamp without time zone,
    carrier_seal_number character varying(255),
    chargeable numeric(19,2),
    chargeable_unit character varying(255),
    commodity_code character varying(255),
    consolidation_id integer,
    container_code character varying(255),
    container_comments character varying(255),
    container_count bigint,
    container_number character varying(255),
    container_stuffing_location bigint,
    customs_release_code character varying(255),
    customs_seal_number character varying(255),
    delivery_address character varying(255),
    description_of_goods character varying(255),
    dg_class character varying(255),
    extra_params character varying(255),
    gross_volume numeric(19,2),
    gross_volume_unit character varying(255),
    gross_weight numeric(19,2),
    gross_weight_unit character varying(255),
    hazardous boolean,
    hazardous_un character varying(255),
    hbl_delivery_mode character varying(255),
    hs_code character varying(255),
    inner_package_measurement_unit character varying(255),
    inner_package_number character varying(255),
    inner_package_type character varying(255),
    is_empty boolean,
    is_own_container boolean,
    is_reefer boolean,
    is_shipper_owned boolean,
    is_temperature_maintained boolean,
    marks_n_nums character varying(255),
    max_temp numeric(19,2),
    max_temp_unit character varying(255),
    measurement numeric(19,2),
    measurement_unit character varying(255),
    min_temp numeric(19,2),
    min_temp_unit_id character varying(255),
    net_weight numeric(19,2),
    net_weight_unit character varying(255),
    no_of_packages bigint,
    package_breadth numeric(19,2),
    package_height numeric(19,2),
    package_length numeric(19,2),
    packs character varying(255),
    packs_type character varying(255),
    pacr_number character varying(255),
    pickup_address character varying(255),
    remarks character varying(255),
    seal_number character varying(255),
    serial_number character varying(255),
    shipper_seal_number character varying(255),
    status character varying(255),
    tare_weight numeric(19,2),
    tare_weight_unit character varying(255),
    terminal_operator_seal_number character varying(255),
    transport_mode character varying(255),
    veterinary_seal_number character varying(255),
    volume_utilization character varying(255),
    weight_utilization character varying(255)
);

CREATE TABLE public.delivery (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    estimated_delivery timestamp without time zone,
    required_by timestamp without time zone
);

CREATE TABLE public.el_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    el_number character varying(255),
    merge_class character varying(255),
    merge_package bigint,
    merge_package_unit character varying(255),
    packages bigint,
    partition boolean,
    partition_seq_number bigint,
    shipment_id bigint,
    unit character varying(255),
    weight bigint,
    weight_unit character varying(255)
);

CREATE TABLE public.events (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    actual timestamp without time zone,
    consolidation_id bigint,
    description character varying(255),
    estimated timestamp without time zone,
    event_estimate_update_reasons character varying(255),
    is_public_tracking_event boolean,
    latitude character varying(255),
    longitude character varying(255),
    master_list character varying(255),
    place_description character varying(255),
    place_name character varying(255),
    shipment_id bigint,
    source character varying(255)
);

CREATE TABLE public.file_repo (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    client_enabled boolean,
    doc_type character varying(255),
    entity_id bigint,
    entity_type character varying(255),
    event_code character varying(255),
    file_name character varying(255),
    is_posted boolean,
    path character varying(255)
);

CREATE TABLE public.jobs (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    additional_terms character varying(255),
    buyer_id bigint,
    confirm_date timestamp without time zone,
    confirm_number character varying(255),
    country_of_origin character varying(255),
    currency character varying(255),
    description character varying(255),
    follow_up_date timestamp without time zone,
    inco_term character varying(255),
    invoice_date timestamp without time zone,
    invoice_number character varying(255),
    order_date timestamp without time zone,
    order_number character varying(255),
    order_status character varying(255),
    service_mode character varying(255),
    shipment_id bigint,
    transport_mode character varying(255)
);

CREATE TABLE public.logs (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    action character varying(255),
    changed_on timestamp without time zone,
    changes character varying(255),
    entity_id bigint,
    entity_name character varying(255),
    parent_id character varying(255),
    parent_type character varying(255),
    user_name character varying(255)
);

CREATE TABLE public.measurment_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    chargable numeric(19,2),
    chargeable_unit character varying(255),
    inner_pack_unit character varying(255),
    inner_packs integer,
    net_weight numeric(19,2),
    net_weight_unit character varying(255),
    no_of_packs integer,
    packs_unit character varying(255),
    volume numeric(19,2),
    volume_unit character varying(255),
    volumetric_weight numeric(19,2),
    volumetric_weight_unit character varying(255),
    weight numeric(19,2),
    weight_unit character varying(255)
);

CREATE TABLE public.notes (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    consolidation_id bigint,
    shipment_id bigint,
    text character varying(255)
);

CREATE TABLE public.packing (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    dg_class_id character varying(255),
    dg_goods_id integer,
    dg_substance_id integer,
    hs_code character varying(255),
    undg_contact character varying(255),
    chargeable numeric(19,2),
    chargeable_unit character varying(255),
    commodity character varying(255),
    commodity_id bigint,
    consolidation_id bigint,
    container_id bigint,
    container_number character varying(255),
    country_code character varying(255),
    customs_release_code character varying(255),
    flash_point character varying(255),
    goods_description character varying(255),
    hazardous boolean,
    height numeric(19,2),
    height_unit character varying(255),
    inner_package_number character varying(255),
    inner_package_type_id character varying(255),
    inner_packs_count bigint,
    inner_packs_id bigint,
    inspections character varying(255),
    is_temperature_controlled boolean,
    length numeric(19,2),
    length_unit character varying(255),
    marksn_nums character varying(255),
    max_temp numeric(19,2),
    max_temp_unit character varying(255),
    min_temp numeric(19,2),
    min_temp_unit_id character varying(255),
    net_weight numeric(19,2),
    net_weight_unit character varying(255),
    origin character varying(255),
    packing_order character varying(255),
    packs character varying(255),
    packs_type character varying(255),
    reference_number character varying(255),
    shipment_id bigint,
    shipment_number character varying(255),
    transport_mode character varying(255),
    vin_number character varying(255),
    volume numeric(19,2),
    volume_unit character varying(255),
    volume_weight numeric(19,2),
    volume_weight_unit character varying(255),
    weight numeric(19,2),
    weight_unit character varying(255),
    width numeric(19,2),
    width_unit character varying(255)
);

CREATE TABLE public.parties (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    address_data jsonb,
    address_id integer,
    entity_id bigint,
    entity_type character varying(255),
    org_data jsonb,
    org_id integer,
    party_type character varying(255)
);


CREATE TABLE public.pd_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    actual_pickup timestamp without time zone,
    estimated_pickup timestamp without time zone,
    pickup timestamp without time zone,
    port_transport_advised timestamp without time zone,
    required_by timestamp without time zone,
    shipment_id bigint,
    type character varying(255)
);

CREATE TABLE public.pickup (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    actual_pickup timestamp without time zone,
    estimated_pickup timestamp without time zone
);

CREATE TABLE public.reference_numbers (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    consolidation_id bigint,
    country_of_issue character varying(255),
    reference_number character varying(255),
    shipment_id character varying(255),
    type character varying(255)
);

CREATE TABLE public.routings (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    aircraft_registration character varying(255),
    aircraft_type character varying(255),
    ata timestamp without time zone,
    atd timestamp without time zone,
    consolidation_id bigint,
    entity_id character varying(255),
    entity_type character varying(255),
    eta timestamp without time zone,
    etd timestamp without time zone,
    flight_number character varying(255),
    is_domestic boolean,
    is_linked boolean,
    leg bigint,
    mode character varying(255),
    pod_id bigint,
    pol_id bigint,
    route_leg_id bigint,
    routing_status character varying(255),
    shipment_id bigint,
    transit_days bigint,
    vessel_id bigint,
    vessel_name character varying(255),
    voyage character varying(255)
);

CREATE TABLE public.services (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    booking_date timestamp without time zone,
    completion_date timestamp without time zone,
    consolidation_id bigint,
    contractor_address_id bigint,
    contractor_id bigint,
    ref_number character varying(255),
    service_count character varying(255),
    service_duration bigint,
    service_notes character varying(255),
    service_type character varying(255),
    shipment_id bigint,
    srv_location integer
);

CREATE TABLE public.shipment_additional_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    ad_code character varying(255),
    be_type character varying(255),
    bl_charges_display character varying(255),
    bl_exporter_shipment character varying(255),
    boe_date timestamp without time zone,
    boe_number character varying(255),
    cha_job_number character varying(255),
    cif_value numeric(19,2),
    ie_code character varying(255),
    igm_file_date timestamp without time zone,
    igm_file_no character varying(255),
    igm_inward_date timestamp without time zone,
    smtp_igm_date timestamp without time zone,
    smtp_igm_number character varying(255),
    wbl_printed boolean,
    activity_type character varying(255),
    airway_bill_dims character varying(255),
    andes_response_date timestamp without time zone,
    andes_status character varying(255),
    andes_status_response_text character varying(255),
    andes_ticket character varying(255),
    assess_value numeric(19,2),
    bonded_warehouse_id bigint,
    branch_si_number character varying(255),
    copy integer,
    custom_city character varying(255),
    custom_house character varying(255),
    custom_location character varying(255),
    customs_no_issue_date timestamp without time zone,
    date_of_issue timestamp without time zone,
    date_of_receipt timestamp without time zone,
    delivery_mode_id character varying(255),
    draft_printed boolean,
    efreight_status character varying(255),
    expiry_date timestamp without time zone,
    external_notes character varying(255),
    free_days numeric(19,2),
    goods_co_id character varying(255),
    house_bill_type character varying(255),
    hsn_number bigint,
    import_export_shipment_lock boolean,
    inspection character varying(255),
    invoice_value numeric(19,2),
    inward_date_and_time timestamp without time zone,
    is_cms_hbl_sent boolean,
    is_credit_override_approved boolean,
    is_export_clearance boolean,
    is_import_clearance boolean,
    is_inland boolean,
    lgd_status character varying(255),
    line_number bigint,
    local_line_number bigint,
    on_board character varying(255),
    on_board_date timestamp without time zone,
    original integer,
    ownership character varying(255),
    ownership_name character varying(255),
    paid_place bigint,
    passed_by character varying(255),
    passed_by_person character varying(255),
    peru_entry_exit_point character varying(255),
    phase character varying(255),
    place_of_issue_id bigint,
    place_of_supply bigint,
    printed_original boolean,
    release_type character varying(255),
    screening_status character varying(255),
    shipment_id bigint,
    shipper_cod numeric(19,2),
    shipper_cod_pm character varying(255),
    spot_rate numeric(19,2),
    spot_rate_type character varying(255),
    sub_line_number bigint,
    supplier_invoice_date timestamp without time zone,
    supplier_invoice_number character varying(255),
    surrender_printed boolean,
    tipo_document_consignee character varying(255),
    tipo_document_consignor character varying(255),
    tipo_document_notify_party character varying(255),
    total_duty numeric(19,2),
    warehouse_id bigint
);

CREATE TABLE public.shipment_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    source_tenant_id bigint,
    additional_terms character varying(255),
    assigned_to integer,
    auto_update_wt_vol boolean,
    booking_number character varying(255),
    booking_reference character varying(255),
    booking_type character varying(255),
    cargo_finance_booking boolean,
    chargable numeric(19,2),
    chargeable_unit character varying(255),
    console_ref character varying(255),
    container_auto_wv_update boolean,
    direction character varying(255),
    documentation_partner bigint,
    entry_detail character varying(255),
    finance_closed_by character varying(255),
    finance_closed_on timestamp without time zone,
    freight_local integer,
    freight_local_currency character varying(255),
    freight_overseas integer,
    freight_overseas_currency character varying(255),
    goods_description character varying(255),
    house_bill character varying(255),
    incoterms character varying(255),
    inner_pack_unit character varying(255),
    inner_packs integer,
    intra_branch boolean,
    is_domestic boolean,
    is_locked boolean,
    is_notify_consignee_equal boolean,
    is_shipment_read_only boolean,
    job_type character varying(255),
    locked_by character varying(255),
    marks_num character varying(255),
    master_bill character varying(255),
    net_weight numeric(19,2),
    net_weight_unit character varying(255),
    no_of_packs integer,
    packs_unit character varying(255),
    payment_terms character varying(255),
    prev_shipment_status integer,
    receiving_branch bigint,
    route character varying(255),
    sales_agent bigint,
    service_type character varying(255),
    shipment_completed_by character varying(255),
    shipment_completed_on timestamp without time zone,
    shipment_id character varying(255),
    shipment_type character varying(255),
    source character varying(255),
    status integer,
    transport_mode character varying(255),
    triangulation_partner bigint,
    volume numeric(19,2),
    volume_unit character varying(255),
    volumetric_weight numeric(19,2),
    volumetric_weight_unit character varying(255),
    weight numeric(19,2),
    weight_unit character varying(255),
    bl_detail_id bigint,
    carrier_detail_id bigint,
    delivery_detail_id bigint,
    measurement_detail_id bigint,
    pickup_detail_id bigint
);

CREATE TABLE public.truck_driver_details (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp without time zone NOT NULL,
    created_by integer,
    guid uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp without time zone NOT NULL,
    updated_by integer,
    tenant_id integer,
    consolidation_id bigint,
    container_id bigint,
    container_type_code character varying(255),
    driver_mobile_number character varying(255),
    driver_name character varying(255),
    self_transporter_name character varying(255),
    shipment_id bigint,
    trailer_number_plate character varying(255),
    transporter_name character varying(255),
    transporter_type character varying(255),
    truck_number_plate character varying(255),
    truck_or_trailer_type_id character varying(255)
);

ALTER TABLE ONLY public.shipment_details
    ADD CONSTRAINT shipment_bl_detail FOREIGN KEY (bl_detail_id) REFERENCES public.bl_details(id);


ALTER TABLE ONLY public.shipment_details
    ADD CONSTRAINT shipment_carrier_detail FOREIGN KEY (carrier_detail_id) REFERENCES public.carrier_details(id);


ALTER TABLE ONLY public.shipment_details
    ADD CONSTRAINT shipment_delivery_detail FOREIGN KEY (delivery_detail_id) REFERENCES public.delivery(id);


ALTER TABLE ONLY public.shipment_details
    ADD CONSTRAINT shipment_pickup_detail FOREIGN KEY (pickup_detail_id) REFERENCES public.pickup(id);

ALTER TABLE ONLY public.shipment_details
    ADD CONSTRAINT shipment_measurement_detail FOREIGN KEY (measurement_detail_id) REFERENCES public.measurment_details(id);


---- logging
--CREATE TABLE IF NOT EXISTS logging(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  meta_data  jsonb,
--  created_at TIMESTAMP,
--  updated_at TIMESTAMP,
--  created_by INT,
--  updated_by INT,
--  is_deleted BOOLEAN,
--  deleted_by INT,
--  deleted_at TIMESTAMP,
--  UNIQUE(guid)
--);
--
--CREATE TABLE IF NOT EXISTS consolidation_details(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  consolidation_number VARCHAR,
--  consolidation_type varchar,
--  transport_mode varchar,
--  container_category varchar,
--  is_domestic INT,
--  mawb VARCHAR,
--  service_level VARCHAR,
--  payment VARCHAR,
--  first_load varchar,
--  last_discharge varchar,
--  booking_type varchar,
--  declaration_type varchar,
--  delivery_mode varchar,
--  is_linked smallint,
--  is_charter smallint,
--  reference_no varchar,
--  package_type varchar,
--  agent_reference varchar,
--  coload_mbl varchar,
--  coload_booking_ref varchar,
--  shipment_type varchar,
--  mbl varchar,
--  is_cargo_only smallint,
--  special_instructions varchar,
--  description varchar,
--  marksn_nums varchar,
--  additional_terms varchar,
--  bonded_warehouse_id bigint,
--  UNIQUE(guid),
--shipment_ids varchar,
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_console FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- Shipment details
--CREATE TABLE IF NOT EXISTS shipment_details(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  direction VARCHAR,
--  status INT,
--  source  VARCHAR,
--  transport_mode VARCHAR,
--  shipment_type VARCHAR,
--  job_type VARCHAR,
--  service_type VARCHAR,
--  house_bill VARCHAR,
--  master_bill VARCHAR,
--  booking_Reference VARCHAR,
--  console_ref VARCHAR,
--  sales_agent BIGINT,
--  payment_terms VARCHAR,
--  goods_description VARCHAR,
--  marks_num VARCHAR,
--  additional_terms VARCHAR,
--  incoterms VARCHAR,
--  quote_type VARCHAR,
--  UNIQUE(guid),
--consolidation_ids VARCHAR,
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_shipment FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- Parties
--CREATE TABLE IF NOT EXISTS parties(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  party_type VARCHAR,
--  org_id INT,
--  address_id INT,
--  org_data  jsonb,
--  address_data jsonb,
--  entity_id bigInt,
--  entity_type varchar,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_parties FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- Carrier details
--CREATE TABLE IF NOT EXISTS carrier_details(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  shipping_line VARCHAR,
--  vessel VARCHAR,
--  voyage VARCHAR,
--  flight_number VARCHAR,
--  aircraft_type VARCHAR,
--  aircraft_registration VARCHAR,
--  truck_ref_number VARCHAR,
--  journey_number VARCHAR,
--  journey_ref_number VARCHAR,
--  origin  varchar,
--  destination varchar,
--  origin_port  varchar,
--  destination_port varchar,
--  eta TIMESTAMP,
--  etd TIMESTAMP,
--  ata TIMESTAMP,
--  atd TIMESTAMP,
--  UNIQUE(guid),
--contact_person_name VARCHAR,
--contact_person_number VARCHAR,
--contact_person_email VARCHAR,
--contact_person_website VARCHAR,
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_carrier FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- BL details
--CREATE TABLE IF NOT EXISTS bl_details(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  release_type VARCHAR,
--  house_bill_type VARCHAR,
--  on_board VARCHAR,
--  on_board_date  TIMESTAMP,
--  delivery_mode VARCHAR,
--  original smallint,
--  copy smallint,
--  bl_charges_display VARCHAR,
--  bl_exporter_shipment VARCHAR,
--  screening_status VARCHAR,
--  paid_place BIGINT,
--  place_of_issue BIGINT,
--  place_of_supply BIGINT,
--  date_of_issue TIMESTAMP,
--  date_of_receipt TIMESTAMP,
--  goods_co VARCHAR,
--  boe_number VARCHAR,
--  boe_date TIMESTAMP,
--  shipment_id bigInt,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_hbl FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- Measurement details
--CREATE TABLE IF NOT EXISTS measurment_details(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  weight decimal,
--  weight_unit VARCHAR,
--  volume decimal,
--  volume_unit VARCHAR,
--  volumetric_weight decimal,
--  volumetric_weight_unit VARCHAR,
--  chargable decimal,
--  chargeable_unit VARCHAR,
--  net_weight decimal,
--  net_weight_unit VARCHAR,
--  no_of_packs INT,
--  packs_unit VARCHAR,
--  inner_packs INT,
--  inner_pack_unit VARCHAR,
--  shipment_id bigInt,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_measurement FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- pickup
--CREATE TABLE IF NOT EXISTS pickup(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  estimated_pickup TIMESTAMP,
--  required_by TIMESTAMP,
--  port_transport_advised TIMESTAMP,
--  actual_pickup TIMESTAMP,
--  shipment_id bigInt,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_pickup FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- delivery
--CREATE TABLE IF NOT EXISTS delivery(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  estimated_delivery TIMESTAMP,
--  actual_delivery TIMESTAMP,
--  required_by TIMESTAMP,
--  port_transport_advised TIMESTAMP,
--  shipment_id bigInt,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_delivery FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- Jobs
--CREATE TABLE IF NOT EXISTS orders(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  order_number VARCHAR,
--  order_date TIMESTAMP,
--  confirm_number VARCHAR,
--  confirm_date TIMESTAMP,
--  invoice_number VARCHAR,
--  invoice_date TIMESTAMP,
--  order_status VARCHAR,
--  followup_date TIMESTAMP,
--  currency VARCHAR,
--  service_mode VARCHAR,
--  incoterm VARCHAR,
--  additional_terms VARCHAR,
--  transport_mode VARCHAR,
--  country_of_origin VARCHAR,
--  shipment_id bigInt,
--  consolidation_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_orders FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- Services
--CREATE TABLE IF NOT EXISTS shipment_services(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  service_type VARCHAR,
--  srv_location INT,
--  booking_date TIMESTAMP,
--  service_count VARCHAR,
--  service_duration TIMESTAMP,
--  completion_date TIMESTAMP,
--  ref_number VARCHAR,
--  service_notes VARCHAR,
--  shipment_id bigInt,
--  consolidation_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_service FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- achieved quantities
--CREATE TABLE IF NOT EXISTS achieved_quantities(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  weight_volume decimal,
--  weight_volume_unit VARCHAR,
--  consolidated_weight decimal,
--  consolidated_weight_unit VARCHAR,
--  consolidatied_volume decimal,
--  consolidatied_volume_unit VARCHAR,
--  consolidation_charge_quantity decimal,
--  consolidation_charge_quantity_unit VARCHAR,
--  volume_utilization  VARCHAR,
--  weight_utilization  VARCHAR,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_quantities FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
--
---- containers
--CREATE TABLE IF NOT EXISTS containers(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  container_type VARCHAR,
--  container_number VARCHAR,
--  seal_number VARCHAR,
--  description_of_goods VARCHAR,
--  no_of_packages INT,
--  net_weight decimal,
--  net_weight_unit VARCHAR,
--  gross_weight decimal,
--  gross_weight_unit VARCHAR,
--  measurement decimal,
--  measurement_unit VARCHAR,
--  commodity_id BIGINT,
--  hs_code VARCHAR,
--  is_shipper_owned BOOLEAN,
--  is_empty BOOLEAN,
--  container_count INT,
--  carrier_seal_number VARCHAR,
--  shipper_seal_number VARCHAR,
--  terminal_operator_seal_number VARCHAR,
--  veterinary_seal_number VARCHAR,
--  customs_seal_number VARCHAR,
--  customs_release_code VARCHAR,
--  container_stuffing_location BIGINT,
--  container_comments VARCHAR,
--  gross_volume decimal,
--  gross_volume_unit VARCHAR,
--  is_reefer BOOLEAN,
--  min_temp decimal,
--  min_temp_unit VARCHAR,
--  max_temp decimal,
--  max_temp_unit VARCHAR,
--  hbl_delivery_mode VARCHAR,
--  per_container_cost_rate VARCHAR,
--  per_container_sell_rate VARCHAR,
--  current_cost_rate decimal,
--  minimum_cost decimal,
--  total_cost_value decimal,
--  current_sell_rate decimal,
--  minimum_sell decimal,
--  total_sell_value decimal,
--  allocation_date TIMESTAMP,
--  dg_class BIGINT,
--  hazardous INT,
--  hazardous_un VARCHAR,
--  tare_weight decimal,
--  tare_weight_unit VARCHAR,
--  serial_number VARCHAR,
--  inner_package_number VARCHAR,
--  inner_package_type VARCHAR,
--  package_length decimal,
--  package_breadth decimal,
--  package_height decimal,
--  is_temperature_maintained BOOLEAN,
--  packs VARCHAR,
--  packs_type VARCHAR,
--  marks_n_nums VARCHAR,
--  inner_package_measurement_unit VARCHAR,
--  pacr_number VARCHAR,
--  chargeable decimal,
--  chargeable_unit VARCHAR,
--  is_own_container BOOLEAN,
--  pack_id BIGINT,
--  transport_mode VARCHAR,
--  status INT,
--  extra_params VARCHAR,
--  remarks VARCHAR,
--  allocated_weight decimal,
--  allocated_weight_unit VARCHAR,
--  allocated_volume decimal,
--  allocated_volume_unit VARCHAR,
--  achieved_weight decimal,
--  achieved_weight_unit VARCHAR,
--  achieved_volume decimal,
--  achieved_volume_unit VARCHAR,
--  weight_utilization VARCHAR,
--  volume_utilization VARCHAR,
--  shipment_id bigInt,
--  consolidation_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_container FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- packing
--CREATE TABLE IF NOT EXISTS packing(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  dg_goods_id BIGINT,
--  dg_substance_id BIGINT,
--  packs VARCHAR,
--  packs_type VARCHAR,
--  container_number VARCHAR,
--  weight decimal,
--  weight_unit VARCHAR,
--  volume decimal,
--  volume_unit VARCHAR,
--  inspections VARCHAR,
--  origin BIGINT,
--  packing_order VARCHAR,
--  length decimal,
--  length_unit VARCHAR,
--  width decimal,
--  width_unit VARCHAR,
--  height decimal,
--  heigth_unit VARCHAR,
--  marks_n_nums VARCHAR,
--  flash_point VARCHAR,
--  undg_contact VARCHAR,
--  is_temperature_controlled BOOLEAN,
--  min_temp decimal,
--  min_temp_unit VARCHAR,
--  max_temp decimal,
--  max_temp_unit VARCHAR,
--  hs_code VARCHAR,
--  country_code VARCHAR,
--  goods_description VARCHAR,
--  reference_number VARCHAR,
--  dg_class VARCHAR,
--  hazardous BOOLEAN,
--  commodity_id BIGINT,
--  net_weight decimal,
--  net_weight_unit VARCHAR,
--  volume_weight decimal,
--  volume_weight_unit VARCHAR,
--  vin_number VARCHAR,
--  container_id BIGINT,
--  transport_mode VARCHAR,
--  inner_package_number VARCHAR,
--  inner_package_type VARCHAR,
--  chargeable decimal,
--  chargeable_unit VARCHAR,
--  customs_release_code VARCHAR,
--  shipment_number VARCHAR,
--  inner_packs_id BIGINT,
--  inner_packs_count BIGINT,
--  shipment_id bigInt,
--  consolidation_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--CONSTRAINT FK_container FOREIGN KEY(container_id) REFERENCES containers(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_packing FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
--
---- routing
--CREATE TABLE IF NOT EXISTS routings(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  leg INT,
--  mode VARCHAR,
--  status VARCHAR,
--  vessel_name VARCHAR,
--  route_description VARCHAR,
--  pol_id BIGINT,
--  pod_id BIGINT,
--  is_domestic BOOLEAN,
--  eta TIMESTAMP,
--  etd TIMESTAMP,
--  ata TIMESTAMP,
--  atd TIMESTAMP,
--  consolidation_id BIGINT,
--  is_linked BOOLEAN,
--  voyage VARCHAR,
--  aircraft_registration VARCHAR,
--  flight_number VARCHAR,
--  aircraft_type VARCHAR,
--  route_leg_id INT,
--  vessel_id INT,
--  transit_days INT,
--  shipment_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_routing FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- dangerous_class
--CREATE TABLE IF NOT EXISTS dangerous_class(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  class_name VARCHAR,
--  dg_class VARCHAR,
--  dg_substance_id INT,
--  consolidation_id bigInt,
--  shipment_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_dg_class FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- -- consol_ship_link
---- CREATE TABLE IF NOT EXISTS consol_ship_link(
---- id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
---- guid uuid NOT NULL,
---- tenant_id INT NOT NULL,
---- shipment_id bigInt,
---- consolidation_id bigInt,
---- CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
---- CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
---- UNIQUE(guid),
---- logging_id BIGINT unique,
---- CONSTRAINT FK_logging_consol_ship_link FOREIGN KEY(logging_id) REFERENCES logging(id)
---- );
--
---- reference_number
--CREATE TABLE IF NOT EXISTS reference_numbers(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  consolidation_id bigInt,
--  shipment_id bigInt,
--  country_of_issue varchar,
--  type varchar,
--  reference_number varchar,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_reference_numbers FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- events
--CREATE TABLE IF NOT EXISTS events(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  consolidation_id bigInt,
--  shipment_id bigInt,
--  event_code varchar,
--  name varchar,
--  type varchar,
--  estimated TIMESTAMP,
--  actual TIMESTAMP,
--  public_tracking_event BOOLEAN,
--  location varchar,
--  place_description varchar,
--  latitude varchar,
--  longitude varchar,
--  source varchar,
--  event_estimate_update_reasons varchar,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_events FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- truck_driver_detail
--CREATE TABLE IF NOT EXISTS truck_driver_detail(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  transporter_type INT,
--  driver_name VARCHAR,
--  driver_mobile_number VARCHAR,
--  truck_number_plate VARCHAR,
--  trailer_number_plate VARCHAR,
--  truck_or_trailertype VARCHAR,
--  container_type_code VARCHAR,
--  container_id BIGINT,
--  shipment_id BIGINT,
--  consolidation_id BIGINT,
--  seld_transporter_name VARCHAR,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--CONSTRAINT FK_container FOREIGN KEY(container_id) REFERENCES containers(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_trucking_details FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- file_repo
--CREATE TABLE IF NOT EXISTS file_repo(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  file_name VARCHAR,
--  path VARCHAR,
--  doc_type VARCHAR,
--  client_enabled INT,
--  is_posted INT,
--  event_code VARCHAR,
--  shipment_id bigInt,
--  consolidation_id bigInt,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_consolidation FOREIGN KEY(consolidation_id) REFERENCES consolidation_details(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_file_repo FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- departure
--CREATE TABLE IF NOT EXISTS departure(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  first_foreign_port_arrival_date TIMESTAMP,
--  last_foreign_port_departure_date TIMESTAMP,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_departure FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- arrival
--CREATE TABLE IF NOT EXISTS arrival(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  first_arrival_port_arrival_date TIMESTAMP,
--  last_foreign_port_departure_date TIMESTAMP,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_arival FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- mbl_details
--CREATE TABLE IF NOT EXISTS mbl_details(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  manifest_print varchar,
--  print_other_docs varchar,
--  awb_dimensions varchar,
--  release_type varchar,
--  no_of_originals int,
--  no_of_copies int,
--  place_of_issue bigInt NULL,
--  mbl_issue_date TIMESTAMP,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_mbl FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- allocations
--CREATE TABLE IF NOT EXISTS allocations(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  shipment_count INT NULL,
--  cutoff_date TIMESTAMP,
--  is_hazardous BOOLEAN,
--  is_temparature_controlled BOOLEAN,
--  weight decimal,
--  weight_unit varchar,
--  volumne decimal,
--  volume_unit varchar,
--  chargable decimal,
--  chargeable_unit varchar,
--  min_temp decimal,
--  min_temp_unit varchar,
--  max_temp decimal,
--  max_temp_unit varchar,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_allocations FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- cutoffs
--CREATE TABLE IF NOT EXISTS cutoffs(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  estimated_terminal_cutoff TIMESTAMP,
--  actual_terminal_cutoff TIMESTAMP,
--  verified_gross_mass_cutoff TIMESTAMP,
--  reefer_cutoff TIMESTAMP,
--  booking_cutoff TIMESTAMP,
--  si_cutoff_cutoff TIMESTAMP,
--  hazardous_booking_cutoff TIMESTAMP,
--  UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_cutoffs FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
---- shipment container mapping
--CREATE TABLE IF NOT EXISTS shipments_common_containers_mapping(
--id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--  guid uuid NOT NULL,
--  tenant_id INT NOT NULL,
--  shipment_id bigInt,
--  containers_id bigInt,
--  created_at TIMESTAMP,
--  updated_at TIMESTAMP,
--  created_by INT,
--  updated_by INT,
--  is_deleted BOOLEAN,
--  deleted_by INT,
--  deleted_at TIMESTAMP,
--CONSTRAINT FK_shipment FOREIGN KEY(shipment_id) REFERENCES shipment_details(id),
--CONSTRAINT FK_container FOREIGN KEY(containers_id) REFERENCES containers(id),
--UNIQUE(guid),
--logging_id BIGINT unique,
--CONSTRAINT FK_logging_ship_container_mapping FOREIGN KEY(logging_id) REFERENCES logging(id)
--);
--
--
--alter table shipment_details add column bl_detail_id bigint unique;
--ALTER TABLE shipment_details ADD CONSTRAINT FK_bl_shipment FOREIGN KEY (bl_detail_id) REFERENCES bl_details (id);
--alter table shipment_details add column carrier_detail_id bigint unique;
--ALTER TABLE shipment_details ADD CONSTRAINT FK_carrier_shipment FOREIGN KEY (carrier_detail_id) REFERENCES carrier_details (id);
--alter table shipment_details add column measurement_detail_id bigint unique;
--ALTER TABLE shipment_details ADD CONSTRAINT FK_meaurment_shipment FOREIGN KEY (measurement_detail_id) REFERENCES measurment_details (id);
--alter table shipment_details add column pickup_detail_id bigint unique;
--ALTER TABLE shipment_details ADD CONSTRAINT FK_pickup_shipment FOREIGN KEY (pickup_detail_id) REFERENCES pickup (id);
--alter table shipment_details add column delivery_detail_id bigint unique;
--ALTER TABLE shipment_details ADD CONSTRAINT FK_delivery_shipment FOREIGN KEY (delivery_detail_id) REFERENCES delivery (id);
--alter table shipment_details add column assigned_to int;
--alter table shipment_details add column is_domestic boolean default false;
--alter table shipment_details add column shipment_id varchar;
--
--alter table consolidation_details add column carrier_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_carrier_console FOREIGN KEY (carrier_id) REFERENCES carrier_details (id);
--alter table consolidation_details add column achieved_quantity_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_archieved_quantity_console FOREIGN KEY (achieved_quantity_id) REFERENCES achieved_quantities (id);
--alter table consolidation_details add column departure_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_departure_console FOREIGN KEY (departure_id) REFERENCES departure (id);
--alter table consolidation_details add column arrival_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_arrival_console FOREIGN KEY (arrival_id) REFERENCES arrival (id);
--alter table consolidation_details add column mbl_detail_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_mbl_details_console FOREIGN KEY (mbl_detail_id) REFERENCES mbl_details (id);
--alter table consolidation_details add column allocation_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_allocations_console FOREIGN KEY (allocation_id) REFERENCES allocations (id);
--alter table consolidation_details add column cutoff_id bigint unique;
--ALTER TABLE consolidation_details ADD CONSTRAINT FK_cutoffs_console FOREIGN KEY (cutoff_id) REFERENCES cutoffs (id);
--
--
