CREATE TABLE IF NOT EXISTS carrier_booking (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp  NOT NULL,
    created_by varchar,
    guid uuid NOT NULL DEFAULT uuid_generate_v4(),
    is_deleted BOOLEAN DEFAULT FALSE,
    updated_at timestamp  NOT NULL,
    updated_by varchar,
    tenant_id INT,
    source_tenant_id INT,
    shipment_guid uuid,
    booking_number VARCHAR(50),
    booking_id VARCHAR(50),
    status VARCHAR(50),
    consolidation_guid uuid,
    carrier_detail_id BIGINT,
    is_temp_controlled BOOLEAN DEFAULT FALSE,
    is_split_booking BOOLEAN DEFAULT FALSE,
    parent_booking_number VARCHAR(255),
    split_booking_sequence VARCHAR(255),
    is_trans_shipment BOOLEAN DEFAULT FALSE,
    transport_mode VARCHAR(4),
    contract_number VARCHAR(255),
    booking_office VARCHAR,
    shipper_ref_number VARCHAR(255),
    forwarder_ref_number VARCHAR(255),
    purchase_order_number VARCHAR(255),
    service_type VARCHAR(3),
    place_of_carrier_receipt VARCHAR(255),
    earliest_departure_date TIMESTAMP,
    place_of_carrier_delivery VARCHAR,
    lateset_delivery_date TIMESTAMP,
    customer_id BIGINT,
    is_override BOOLEAN DEFAULT FALSE,
    is_linked BOOLEAN DEFAULT FALSE,
    estimated_terminal_cutoff TIMESTAMP,
    terminal_cutoff TIMESTAMP,
    verified_gross_mass_cutoff TIMESTAMP,
    reefer_cutoff TIMESTAMP,
    booking_cutoff TIMESTAMP,
    ship_instruction_cutoff TIMESTAMP,
    hazardous_booking_cutoff TIMESTAMP,
    latest_full_equ_delivered_to_carrier TIMESTAMP,
    earliest_drop_off_full_equ_to_carrier TIMESTAMP,
    earliest_empty_equ_pick_up TIMESTAMP,
    requested_transshipment VARCHAR,
    prohibited_transshipment VARCHAR,
    carrier_comments VARCHAR,
    customer_comments VARCHAR,
    reference_no VARCHAR,
    locked_by INT,
    is_locked BOOLEAN DEFAULT FALSE,
    tenant_department_id INT,
    order_id VARCHAR,
    mode_of_booking VARCHAR,
    bol VARCHAR(20),
    FOREIGN KEY (carrier_detail_id) REFERENCES carrier_details(id)
);

ALTER TABLE IF EXISTS booking_carriage
    ADD COLUMN IF NOT EXISTS carrier_booking_id bigint,
    add constraint fk_booking_carriage_carrier_booking FOREIGN KEY (carrier_booking_id) REFERENCES carrier_booking(id);

ALTER TABLE IF EXISTS reference_numbers
    ADD COLUMN IF NOT EXISTS carrier_booking_id bigint,
    add constraint fk_reference_numbers_carrier_booking FOREIGN KEY (carrier_booking_id) REFERENCES carrier_booking(id);

CREATE TABLE IF NOT EXISTS booking_payment (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp  NOT NULL,
    created_by varchar,
    guid uuid NOT NULL DEFAULT uuid_generate_v4(),
    is_deleted BOOLEAN DEFAULT FALSE,
    updated_at timestamp  NOT NULL,
    updated_by varchar,
    tenant_id int,
    ocean_charge_type VARCHAR(50),
    charge_type VARCHAR(50),
    payment_terms VARCHAR(50),
    payer VARCHAR(50),
    payment_location VARCHAR,
    carrier_booking_id bigint,
    FOREIGN KEY (carrier_booking_id) REFERENCES carrier_booking(id)
);


CREATE TABLE IF NOT EXISTS shipping_instruction (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp  NOT NULL,
    created_by varchar,
    guid uuid NOT NULL DEFAULT uuid_generate_v4(),
    is_deleted BOOLEAN DEFAULT FALSE,
    updated_at timestamp  NOT NULL,
    updated_by varchar,
    tenant_id int,
    consolidation_guid uuid,
    shipment_guid uuid,
    booking_id bigint,
    is_uca BOOLEAN DEFAULT FALSE,
    carrier_detail_id BIGINT,
    carrier VARCHAR(255),
    carrier_booking_number VARCHAR(255),
    email VARCHAR(255),
    shipper_id BIGINT,
    forwarder_id BIGINT,
    consignee_id BIGINT,
    notify_party_id BIGINT,
    origin_of_goods VARCHAR,
    place_of_carrier_receipt VARCHAR,
    place_of_carrier_delivery VARCHAR,
    imo_number VARCHAR(255),
    service_type VARCHAR(3),
    ship_to_id BIGINT,
    shipment_type VARCHAR,
    total_container_count VARCHAR(255),
    total_package_count VARCHAR,
    total_shipment_weight VARCHAR,
    total_shipment_weight_unit VARCHAR,
    total_shipment_volume DECIMAL,
    total_shipment_volume_unit VARCHAR,
    hbl_filling_info VARCHAR,
    pcin VARCHAR,
    csn VARCHAR,
    mcin VARCHAR,
    shipper_declared_value VARCHAR,
    shipper_declared_value_currency VARCHAR,
    user_defined_clauses VARCHAR,
    bl_release_office VARCHAR,
    req_date_of_issue TIMESTAMP,
    original_seaway BOOLEAN DEFAULT FALSE,
    is_stand_alone_hbl BOOLEAN DEFAULT FALSE,
    hbl_number BOOLEAN DEFAULT FALSE,
    original_bill BOOLEAN DEFAULT FALSE,
    original_freighted_copies VARCHAR,
    original_un_freighted_copies VARCHAR,
    original_non_negotiable_freighted_copies VARCHAR,
    original_non_negotiable_un_freighted_copies VARCHAR,
    seaway_express_bill BOOLEAN DEFAULT FALSE,
    seaway_express_freighted_copies VARCHAR(255),
    seaway_express_un_freighted_copies VARCHAR(255),
    bl_comments VARCHAR,
    status VARCHAR(50),
    b_l_object_status VARCHAR,
    consignor_name VARCHAR,
    consignor_address VARCHAR,
    consignor_tax_id VARCHAR,
    consignor_reference_number VARCHAR,
    consignee_name VARCHAR,
    consignee_address VARCHAR,
    consignee_reference_number VARCHAR,
    purchase_order_number VARCHAR,
    exporter_reference_number VARCHAR,
    b_l_reference_number VARCHAR,
    place_of_receipt VARCHAR,
    port_of_load VARCHAR,
    port_of_discharge VARCHAR,
    place_of_delivery VARCHAR,
    no_of_copies VARCHAR,
    reason VARCHAR,
    is_sync_with_bl_object BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (carrier_detail_id) REFERENCES carrier_details(id),
    FOREIGN KEY (shipper_id) REFERENCES parties(id),
    FOREIGN KEY (forwarder_id) REFERENCES parties(id),
    FOREIGN KEY (consignee_id) REFERENCES parties(id),
    FOREIGN KEY (notify_party_id) REFERENCES parties(id),
    FOREIGN KEY (ship_to_id) REFERENCES parties(id)
);

ALTER TABLE IF EXISTS containers
    ADD COLUMN IF NOT EXISTS carrier_booking_id bigint,
    ADD COLUMN IF NOT EXISTS shipping_instruction_id bigint,
    add constraint fk_containers_carrier_booking FOREIGN KEY (carrier_booking_id) REFERENCES carrier_booking(id),
    add constraint fk_containers_shipping_instruction FOREIGN KEY (shipping_instruction_id) REFERENCES shipping_instruction(id);


ALTER TABLE IF EXISTS packing
    ADD COLUMN IF NOT EXISTS carrier_booking_id bigint,
    ADD COLUMN IF NOT EXISTS shipping_instruction_id bigint,
    add constraint fk_packing_carrier_booking FOREIGN KEY (carrier_booking_id) REFERENCES carrier_booking(id),
    add constraint fk_packing_shipping_instruction FOREIGN KEY (shipping_instruction_id) REFERENCES shipping_instruction(id);